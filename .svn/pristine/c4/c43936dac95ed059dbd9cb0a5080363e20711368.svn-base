<template>
    <div class="leftNav flex">
        <el-menu
            ref="menu"
            :default-active="curIndex"
            class="leftTreeNavMenu flex1"
            @open="handleOpen"
            @close="handleClose">
            <span class="flex flex1 border" v-for="(item,index) in treeList" :key="index">
            <el-submenu class="flexColumn flex1" v-if="item.children" :index="index+''">
                <template slot="title">
                    <i class="icon-item icon02"></i>
                    <span><em>{{item.name}}</em></span>
                </template>

                <span class="flexColumn flex1" v-for="(item1,index1) in item.children" :key="index1">
                    <el-menu-item class="last" v-if="!item1.children" :index="index+'-'+index1" @click="gotoUrl(item1.panelId,item1.siteId)"><em>{{item1.name}}</em></el-menu-item>
                    <el-submenu v-if="item1.children" :index="index+'-'+index1">
                      <template slot="title">
                        <span><em>{{item1.name}}</em></span>
                      </template>
                    <span v-for="(item2,index2) in item1.children" :key="index2">
                      <el-menu-item v-if="item1.children" class="last" :index="index+'-'+index1+'-'+index2"  @click="gotoUrl(item2.panelId,item2.siteId)"><em>{{item2.name}}</em></el-menu-item>
                    </span>
                  </el-submenu>
                </span>
            </el-submenu>
            <el-menu-item class="last" :index="index+''" v-if="!item.children">
                <!-- <i class="el-icon-menu"></i> -->
                <span slot="title" @click="gotoUrl(item.panelId,item.siteId)"><em>{{item.name}}</em></span>
            </el-menu-item>
            </span>
        </el-menu>
    </div>
</template>
<script>

export default {
  props: [
    'treeList',
    'curIndex'
  ],
  data () {
    return {
      treeNav: []
    }
  },
  mounted () {
  },
  methods: {

    handleOpen (key, keyPath) {
      // this.curIndex = key
    },
    handleClose (key, keyPath) {
      console.log(key, keyPath)
    },
    gotoUrl (parentId, siteId) {
      this.$router.push({
        path: '/analysis/' + this.$route.params.id + '/index/innerIframe/' + parentId + '/' + siteId
      })
    }
  }
}
</script>
<style lang="less">
@import '~@/assets/styls/common.less';
.leftNav{
    width:230px;
    .flexColumn;
    .el-menu-item:focus, .el-menu-item:hover{
      background:none;
    }
    // .el-menu-item:hover{
    //   em{
    //     color:@hoverNavChildColor;
    //   }
    // }
    .leftTreeNavMenu{
        background: none;
        border-right-color:@borderColor;
        .border{
          border-bottom: 1px solid @borderColor;
        }
        .el-submenu{
            // border-bottom:1px solid @borderColor;
            font-size:15px;
            .el-submenu__title{
                border-bottom:1px solid @borderColor;
                font-size:15px;
                .alignCenter;
                .flex1;
            }
            &:hover{
                background:none;
                span{
                    color:#fff;
                }
                .el-submenu__title{
                    background:none;
                    &:hover{
                        background:none;
                    }
                    span{
                        color:#fff;
                    }
                }
            }
        }
        .el-menu-item,.el-submenu__title{
            span{
                color:@fontColor;
            }
        }
        .el-submenu__title{
            // padding-left:20px !important;
          .icon-item{
            width:36px;
            height:36px;
            border-radius:100%;
            margin-right:15px;
            &.icon02{
              background: url(~@/assets/img/icon02.png) no-repeat;
            }
          }
        }
        .el-submenu{
            .el-menu{
                background: none;
                // padding-left:25px;
                li{
                    color:@navChildColor;
                    position: relative;
                    font-size:14px;
                    &:hover,&.active{
                        color:@hoverNavChildColor;
                        background:none;
                        &:before,&:after{
                            background:@hoverNavChildColor;
                        }
                    }
                    &.last{
                      display: flex;
                        em{
                          position:relative;
                          display:inline-block;
                          flex:1;
                          padding-left:25px;
                          &:before,&:after{
                            position:absolute;
                            content: '';
                            display: block;
                            top:50%;
                            background:#a8bbd2;
                          }
                          &:before{
                              width:3px;
                              height:8px;
                              left:8px;
                              margin-top:-4px;
                          }
                          &:after{
                              width:6px;
                              height:6px;
                              margin-top:-3px;
                              right:-20px;
                              border-radius: 50%;
                          }
                        }
                    }
                }
            }
        }
    }
}
</style>
